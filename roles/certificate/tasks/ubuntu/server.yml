##
#   Copyright 2020 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: server | ensure the domain base directory exists
  file:
    path: "{{ certificate_server_domain_cert_path }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  become: true

- name: server | generate key file
  shell: "openssl genrsa -out {{ certificate_server_domain_key_file }} {{ certificate_server_key_size }}"
  args:
    creates: "{{ certificate_server_domain_key_file }}"
  become: true

- name: server | ensure the private key is only readable by root
  file:
    path: "{{ certificate_server_domain_key_file }}"
    owner: root
    group: root
    mode: 0600
  become: true

- name: provide req.cnf
  template:
    src: "req.cnf.j2"
    dest: "{{ certificate_server_domain_cnf_file }}"
    owner: root
    group: root
    mode: '0644'
  become: true

- name: server | generate csr file
  shell: "openssl req -new -key {{ certificate_server_domain_key_file }} -out {{ certificate_server_domain_csr_file }} -config {{ certificate_server_domain_cnf_file }}"
  args:
    creates: "{{ certificate_server_domain_csr_file }}"
  become: true

- name: server | sign csr with ca
  shell: "openssl x509 -req -in {{ certificate_server_domain_csr_file }} -extfile {{ certificate_server_domain_cnf_file }} -extensions v3_req -CA {{ certificate_ca_cert_file }} -CAkey {{ certificate_ca_key_file }} -CAcreateserial -out {{ certificate_server_domain_cert_file }} -days {{ certificate_server_cert_lifetime }} -sha256"
  args:
    creates: "{{ certificate_server_domain_cert_file }}"
  become: true

- name: server | get fs information for certificate full chain file
  stat:
    path: "{{ certificate_server_domain_fullchain_file }}"
  register: certificate_server_fullchain_file_obj

- name: server | merge certificate and ca file into fullchain file
  shell: "{{ item }}"
  with_items:
    - "cat {{ certificate_server_domain_cert_file }} > {{ certificate_server_domain_fullchain_file }}"
    - "cat {{ certificate_ca_cert_file }} >> {{ certificate_server_domain_fullchain_file }}"
  when: certificate_server_fullchain_file_obj.stat.exists == false
  become: true