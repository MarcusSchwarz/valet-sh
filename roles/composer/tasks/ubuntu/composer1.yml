##
#   Copyright 2020 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: "get stats for dir '{{ current_home }}/.config/composer1'"
  stat:
    path: "{{ current_home }}/.config/composer1"
  register: composer1_config_path_obj

- name: "get stats for dir '{{ current_home }}/.config/composer'"
  stat:
    path: "{{ current_home }}/.config/composer"
  register: composer_legacy_config_path_obj

- block:
    - name: "copy '{{ current_home }}/.config/composer' to {{ current_home }}/.config/composer1"
      synchronize:
        src: "{{ current_home }}/.config/composer"
        dest: "{{ current_home }}/.config/composer1"
      become: true

    - name: "remove '{{ current_home }}/.config/composer'"
      file:
        path: "{{ current_home }}/.config/composer"
        state: absent
      become: true
  when: not composer1_config_path_obj.stat.exists and composer_legacy_config_path_obj.stat.exists

- name: "get stats for dir '{{ current_home }}/.cache/composer1'"
  stat:
    path: "{{ current_home }}/.cache/composer1"
  register: composer1_cache_path_obj

- name: "get stats for dir '{{ current_home }}/.cache/composer'"
  stat:
    path: "{{ current_home }}/.cache/composer"
  register: composer_legacy_cache_path_obj

- block:
    - name: "copy '{{ current_home }}/.cache/composer' to {{ current_home }}/.cache/composer1"
      synchronize:
        src: "{{ current_home }}/.cache/composer"
        dest: "{{ current_home }}/.cache/composer1"
      become: true

    - name: "remove '{{ current_home }}/.cache/composer'"
      file:
        path: "{{ current_home }}/.cache/composer"
        state: absent
      become: true
  when: not composer1_cache_path_obj.stat.exists and composer_legacy_cache_path_obj.stat.exists

- name: "ensure installation directories existing"
  file:
    path: "{{ composer1_install_dir_item }}"
    state: directory
  with_items:
    - "{{ valet_packages_path }}"
    - "{{ valet_packages_path }}/composer1"
    - "{{ valet_packages_path }}/composer1/bin"
  loop_control:
    loop_var: composer1_install_dir_item

- name: "ensure composer-1 is installed"
  get_url:
    url: https://getcomposer.org/composer-1.phar
    dest: "{{ composer1_bin }}"
    owner: "{{ current_user }}"
    group: "{{ current_group }}"
    mode: "0755"
    force: true
  become: true

- name: ensure composer-1 wrapper script is up2date
  template:
    src: "ubuntu/composer1.j2"
    dest: "/usr/local/bin/composer1"
    owner: "{{ current_user }}"
    group: "{{ current_group }}"
    mode: '0755'
    force: true
  become: true

- name: install prestissimo
  shell: "/usr/bin/php7.3 /usr/local/bin/composer1 global require hirak/prestissimo"

#- name: install prestissimo
#  composer:
#    command: require
#    executable: /usr/bin/php7.3
#    global_command: yes
#    arguments: hirak/prestissimo

