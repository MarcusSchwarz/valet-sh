##
#   Copyright 2020 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: check if nvm.sh already exists
  stat:
    path: "{{ current_home }}/.nvm/nvm.sh"
  register: nodejs_nvm_sh_file_obj

- name: Check if npm is installed
  shell: "source {{ current_home }}/.nvm/nvm.sh && which npm"
  args:
    executable: /bin/bash
  register: nodejs_nvm_executable_path_obj
  when: nodejs_nvm_sh_file_obj.stat.exists

- name: "ensure 'gulp' and 'n' is not installed globally"
  npm:
    name: "{{ nvm_uninstall_global_packages_item }}"
    global: yes
    executable: "{{ nodejs_nvm_executable_path_obj.stdout }}"
    state: absent
  with_items:
    - "n"
    - "gulp"
  loop_control:
    loop_var: nvm_uninstall_global_packages_item
  when: nodejs_nvm_sh_file_obj.stat.exists

- name: "ensure 'nvm' is installed"
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/{{ nvm_version }}/install.sh | bash
  args:
    creates: "{{ current_home }}/.nvm/nvm.sh"
  register: nvm_installation_obj

- name: check if .zshrc exists in home directory
  stat:
    path: "{{ current_home }}/.zshrc"
  register: zsh_rc_file_obj

- name: ensure nvm will be loaded with zsh
  blockinfile:
    path: "{{ current_home }}/.zshrc"
    block: |
      export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
  when: zsh_rc_file_obj.stat.exists

- name: "install default node version"
  shell: "source {{ current_home }}/.nvm/nvm.sh && nvm install {{ node_version }}"
  args:
    executable: /bin/bash
  when: nvm_installation_obj.changed

- name: "install default node version"
  shell: "source {{ current_home }}/.nvm/nvm.sh && nvm alias default {{ node_version }}"
  args:
    executable: /bin/bash
  when: nvm_installation_obj.changed
