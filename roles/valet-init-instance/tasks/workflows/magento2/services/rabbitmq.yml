##
#   Copyright 2020 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- block:
    - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq is started"
      systemd:
        name: rabbitmq-server
        state: restarted
        enabled: true
      become: true

    - name: "workflows » magento2 » services » rabbitmq | include valet services file"
      include_vars:
        file: "{{ valet_etc_services_file }}"
        name: valet_sh_services_obj

    - name: "workflows » magento2 » services » rabbitmq | prepare new config element"
      set_fact:
        new_service_state_element:
          rabbitmq: true

    - name: "workflows » magento2 » services » rabbitmq | update service object"
      set_fact:
        valet_sh_services_updated_states: "{{ valet_sh_services_obj.states | combine(new_service_state_element) }}"

    - name: "workflows » magento2 » services » rabbitmq | merge objects"
      set_fact:
        valet_sh_services_obj:
          states: "{{ valet_sh_services_updated_states }}"
          defaults: "{{ valet_sh_services_obj.defaults }}"

    - name: "workflows » magento2 » services » rabbitmq | transform object into nice yaml output"
      set_fact:
        valet_etc_services_list: "{{ valet_sh_services_obj | to_nice_yaml( width=50, explicit_start=True, explicit_end=True) }}"

    - name: "workflows » magento2 » services » rabbitmq | write new services.yml file"
      copy:
        content: "{{ valet_etc_services_list }}"
        dest: "{{ valet_etc_services_file }}"
      become: true

    - name: "workflows » magento2 » services » rabbitmq | wait for rabbitmq to be reachable"
      wait_for:
        port: 5672
        delay: 5

    - block:
        - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq vhost is absent"
          rabbitmq_vhost:
            name: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
            state: absent
          become: true

        - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq user is absent"
          rabbitmq_user:
            user: "{{ valet_sh_service_rabbitmq_user }}"
            password: "{{ valet_sh_service_rabbitmq_password }}"
            vhost: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
            tags: "administrator"
            state: absent
          become: true
      when: valet_opt_flag_clean is defined and valet_opt_flag_clean|bool

    - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq vhost exists"
      rabbitmq_vhost:
        name: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
        state: present
      become: true

    - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq user exists"
      rabbitmq_user:
        user: "{{ valet_sh_service_rabbitmq_user }}"
        password: "{{ valet_sh_service_rabbitmq_password }}"
        vhost: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
        tags: "administrator"
        configure_priv: .*
        read_priv: .*
        write_priv: .*
        state: present
      become: true
  when:
    - current_os == "ubuntu"
    - valet_sh_project_vars.services is defined
    - valet_sh_project_vars.services.rabbitmq is defined
    - valet_sh_project_vars.services.rabbitmq.vhost is defined

- block:
    - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq is started"
      shell: "{{ valet_sh_homebrew_bin_x86 }} services start rabbitmq"
      when: current_arch != "arm64"

    - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq is started"
      shell: "{{ valet_sh_homebrew_bin_arm64 }} services start rabbitmq"
      when: current_arch == "arm64"

    - name: "workflows » magento2 » services » rabbitmq | include valet services file"
      include_vars:
        file: "{{ valet_etc_services_file }}"
        name: valet_sh_services_obj

    - name: "workflows » magento2 » services » rabbitmq | prepare new config element"
      set_fact:
        new_service_state_element:
          rabbitmq: true

    - name: "workflows » magento2 » services » rabbitmq | update service object"
      set_fact:
        valet_sh_services_updated_states: "{{ valet_sh_services_obj.states | combine(new_service_state_element) }}"

    - name: "workflows » magento2 » services » rabbitmq | merge objects"
      set_fact:
        valet_sh_services_obj:
          states: "{{ valet_sh_services_updated_states }}"
          defaults: "{{ valet_sh_services_obj.defaults }}"

    - name: "workflows » magento2 » services » rabbitmq | transform object into nice yaml output"
      set_fact:
        valet_etc_services_list: "{{ valet_sh_services_obj | to_nice_yaml( width=50, explicit_start=True, explicit_end=True) }}"

    - name: "workflows » magento2 » services » rabbitmq | write new services.yml file"
      copy:
        content: "{{ valet_etc_services_list }}"
        dest: "{{ valet_etc_services_file }}"

    - name: "workflows » magento2 » services » rabbitmq | wait for rabbitmq to be reachable"
      wait_for:
        port: 5672
        delay: 5

    - block:
        - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq vhost is absent"
          rabbitmq_vhost:
            name: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
            node: "rabbit@localhost"
            state: absent

        - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq user is absent"
          rabbitmq_user:
            user: "{{ valet_sh_service_rabbitmq_user }}"
            password: "{{ valet_sh_service_rabbitmq_password }}"
            vhost: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
            node: "rabbit@localhost"
            tags: "administrator"
            state: absent
      when: valet_opt_flag_clean is defined and valet_opt_flag_clean|bool

    - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq vhost exists"
      rabbitmq_vhost:
        name: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
        node: "rabbit@localhost"
        state: present

    - name: "workflows » magento2 » services » rabbitmq | ensure rabbitmq user exists"
      rabbitmq_user:
        user: "{{ valet_sh_service_rabbitmq_user }}"
        password: "{{ valet_sh_service_rabbitmq_password }}"
        vhost: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
        node: "rabbit@localhost"
        tags: "administrator"
        configure_priv: .*
        read_priv: .*
        write_priv: .*
        state: present
  when:
    - current_os == "mac"
    - valet_sh_project_vars.services is defined
    - valet_sh_project_vars.services.rabbitmq is defined
    - valet_sh_project_vars.services.rabbitmq.vhost is defined