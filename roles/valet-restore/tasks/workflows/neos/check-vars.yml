#   Copyright 2021 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: "workflows » neos » check-vars | set value for valet_project_src_dir"
  set_fact:
    valet_project_src_dir: "{{ valet_sh_project_vars.instance.path }}"
  when:
    - valet_sh_project_vars.instance is defined
    - valet_sh_project_vars.instance.path is defined

- name: "workflows » neos » check-vars | set fallback value for valet_project_src_dir"
  set_fact:
    valet_project_src_dir: "{{ valet_project_default_src_dir }}"
  when: not valet_project_src_dir

- name: "workflows » neos » check-vars | set default value for valet_restore_db_identifier if not set"
  set_fact:
    valet_restore_db_identifier: "{{ valet_restore_default_db_identifier }}"
  when: (valet_restore_db_identifier is not defined) or (valet_restore_db_identifier|length == 0)

- name: "workflows » neos » check-vars | ensure valet_restore_db_identifier has allowed value"
  fail:
    msg: "not allowed value {{ valet_restore_db_identifier }} for var 'valet_restore_db_identifier'"
  when: (valet_restore_db_identifier != "latest") and (valet_restore_db_identifier != "previous")

- name: set filename for instance db
  set_fact:
    valet_sh_instance_db_filename: "{{ valet_restore_db_identifier }}.sql.gz"

- name: "workflows » neos » check-vars | set current tmp directory var"
  set_fact:
    current_tmp_dir: "{{ valet_current_path }}/tmp"

- name: "workflows » neos » check-vars | ensure tmp directory exists"
  file:
    path: "{{ current_tmp_dir }}"
    state: directory

- name: "workflows » neos » check-vars | set default mysql client configuration"
  set_fact:
    valet_sh_project_mysql_client_configuration: "{{ current_home }}/.my.cnf"

- name: "workflows » neos » check-vars | override mysql client configuration"
  set_fact:
    valet_sh_project_mysql_client_configuration: "{{ current_home }}/.my{{ valet_sh_project_vars.services.mysql.version }}.cnf"
  when:
    - valet_sh_project_vars.services is defined
    - valet_sh_project_vars.services.mysql is defined
    - valet_sh_project_vars.services.mysql.version is defined

- name: "workflows » neos » check-vars | set default mysql server port configuration"
  set_fact:
    valet_sh_project_mysql_server_port: "{{ valet_sh_service_mysql_port_presets.mysql57 }}"

- name: "workflows » neos » check-vars | override mysql server port configuration"
  set_fact:
    valet_sh_project_mysql_server_port: "{{ valet_sh_service_mysql_port_presets.mysql80 }}"
  when:
    - valet_sh_project_vars.services is defined
    - valet_sh_project_vars.services.mysql is defined
    - valet_sh_project_vars.services.mysql.version is defined
    - valet_sh_project_vars.services.mysql.version == 8.0

- name: "workflows » neos » check-vars | default database name based on current working dir"
  set_fact:
    valet_sh_project_database_name: "{{ valet_working_dir }}"

- name: "workflows » neos » check-vars | override database name when defined in valet-sh.yml file"
  set_fact:
    valet_sh_project_database_name: "{{ valet_sh_project_vars.services.mysql.database | trim  }}"
  when:
    - valet_sh_project_vars.services is defined
    - valet_sh_project_vars.services.mysql is defined
    - valet_sh_project_vars.services.mysql.database is defined

- name: "workflows » neos » check-vars | set hub port"
  set_fact:
    valet_sh_hub_port: "{{ valet_sh_project_vars.hub.port | trim  }}"
  when: valet_sh_project_vars.hub.port is defined

- name: "workflows » neos » check-vars | set hub host"
  set_fact:
    valet_sh_hub_host: "{{ valet_sh_project_vars.hub.host | trim  }}"
  when: valet_sh_project_vars.hub.host is defined

- name: "workflows » neos » check-vars | set hub user"
  set_fact:
    valet_sh_hub_user: "{{ valet_sh_project_vars.hub.user | trim  }}"
  when: valet_sh_project_vars.hub.user is defined

- name: "workflows » neos » check-vars | set hub data path"
  set_fact:
    valet_sh_hub_path: "{{ valet_sh_project_vars.hub.path | trim }}"
  when: valet_sh_project_vars.hub.path is defined

- name: "workflows » neos » check-vars | set current tmp directory var"
  set_fact:
    current_tmp_dir: "{{ valet_current_path }}/tmp"

- name: "workflows » neos » check-vars | ensure tmp directory exists"
  file:
    path: "{{ current_tmp_dir }}"

- name: "workflows » neos » check-vars | set hub port"
  set_fact:
    valet_sh_hub_port: "{{ valet_sh_project_vars.hub.port | trim  }}"
  when: valet_sh_project_vars.hub.port is defined

- name: "workflows » neos » check-vars | set hub host"
  set_fact:
    valet_sh_hub_host: "{{ valet_sh_project_vars.hub.host | trim  }}"
  when: valet_sh_project_vars.hub.host is defined

- name: "workflows » neos » check-vars | set hub user"
  set_fact:
    valet_sh_hub_user: "{{ valet_sh_project_vars.hub.user | trim  }}"
  when: valet_sh_project_vars.hub.user is defined

- name: "workflows » neos » check-vars | set valet_instancebackup_identifier when defined"
  set_fact:
    valet_instancebackup_identifier: "{{ valet_sh_project_vars.instance.sync.identifier | trim  }}"
  when:
    - (valet_instancebackup_identifier is not defined) or valet_instancebackup_identifier|length == 0
    - valet_sh_project_vars.instance is defined
    - valet_sh_project_vars.instance.sync is defined
    - valet_sh_project_vars.instance.sync.identifier is defined

- name: "workflows » neos » check-vars | ensure valet_instancebackup_identifier has a value"
  fail:
    msg: "you need to set a valid 'instancebackup-identifier' ether in your .valet-sh.yml file or as an argument"
  when: not valet_instancebackup_identifier

- name: "workflows » neos » check-vars | set default restore commands"
  set_fact:
    valet_restore_post_restore_commands: "{{ valet_restore_workflow.post_restore_commands }}"

- name: "workflows » neos » check-vars | set restore commands from .valet-sh.yml file"
  set_fact:
    valet_restore_post_restore_commands: "{{ valet_restore_workflow.post_restore_commands }}"
  when:
    - valet_sh_project_vars.instance is defined
    - valet_sh_project_vars.instance.sync is defined
    - valet_sh_project_vars.instance.sync.commands is defined

- name: "workflows » neos » check-vars | set default php cli bin"
  set_fact:
    php_bin: "php"

- name: "workflows » neos » check-vars | override php cli bin"
  set_fact:
    php_bin: "php{{ valet_sh_project_vars.services.php.version }}"
  when:
    - valet_sh_project_vars.services is defined
    - valet_sh_project_vars.services.php is defined
    - valet_sh_project_vars.services.php.version is defined
